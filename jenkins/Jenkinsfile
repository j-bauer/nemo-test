#!/usr/bin/env groovy

def cluster = [cpus: "20",
               mem: "120g",
               prefix: "/home/jenkins/software",
               modules_prefix: "/home/jenkins/software/modules/all",
               easybuild_path: "/home/jenkins/easybuild/modules/all"
]

def running_opts = []

node('mg2') {
    stage('Defining Task') {
        gitVars = checkout scm
        def workingDir = sh(returnStdout: true,
                script: 'echo $PWD').trim()
        def branch = gitVars.GIT_BRANCH.trim()
        def prefix
        def softwareList
        def triggeredBy = currentBuild.getBuildCauses()[0].shortDescription.split(' ')[2]
        def commitMessage = sh(returnStdout: true, script: 'git log -1 --pretty=format:%s').trim()

        if (branch == "origin/master") {
            prefix = "${cluster.prefix}"
            softwareList="Template"
            if (triggeredBy == "timer" || commitMessage ==~ /.*REGRESSION.*/ ) {
                echo "Detecting regression"
                prefix = "${workingDir}/software"
            }
            running_opts.add("--hide-deps")
        } else {
            prefix = "${workingDir}/software"
            softwareList="${workingDir}/${build_id}"
            sh("""git diff origin/master...HEAD --name-only --oneline --no-merges --diff-filter=ACMRTUXB |grep ^easybuild\\/easyconfigs\\/.*\\.eb\\\$ |awk '{print \"basename \"\$0}' > ${softwareList}""")
        }
        running_opts.add("--prefix=${prefix}")
        running_opts.add("--list=${softwareList}")

        echo "================================="
        println running_opts
        echo "================================="

    }

    stage('Build Stage') {
        def workingDir = sh(returnStdout: true,
                script: 'echo $PWD').trim()
        def opts = ""
        for (i in running_opts) {
            opts += " $i"
        }
        command = "srun --partition=1d --cpus-per-task=$cluster.cpus --mem=$cluster.mem $workingDir/jenkins/production.sh $opts"
        sh("""$command""")
    }
}
